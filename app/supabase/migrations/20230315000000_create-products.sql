-- noinspection SqlNoDataSourceInspectionForFile
-- noinspection SqlResolveForFile @ any/"auth"

CREATE TABLE products
(
    id          bigint generated by default as identity primary key,
    title       text,
    description text,
    rarity      varchar(30),
    set         text,
    card_type   varchar(30),
    attributes  varchar(100),
    types       varchar(100),
    price       float,
    created_at  timestamp with time zone default timezone('utc'::text, now()) not null
);

alter table products
    enable row level security;

create
    policy "Logged in users can create products." on products for
    insert with check (true);

create
    policy "Logged in users can update products." on products for
    update using (true);

create
    policy "Logged in users can delete products." on products for
    delete
    using (true);

create
    policy "products are public." on products for
    select using (true);


CREATE TABLE payment
(
    id bigint generated by default as identity primary key,
    payment_amount float not null,
    payment_type varchar(30)
);


alter table payment
    enable row level security;

create
    policy "Logged in users can create payments." on payment for
    insert with check (true);

create
    policy "Logged in users can update payments" on payment for
    update using (true);

create
    policy "Logged in users can delete payments." on payment for
    delete
    using (true);

create
    policy "payments are public." on payment for
    select using (true);

CREATE TABLE addresses
(
    id bigint generated by default as identity primary key,
    firstname TEXT NOT NULL,
    name TEXT NOT NULL,
    company TEXT,
    "address" TEXT NOT NULL,
    zip_code TEXT NOT NULL,
    city TEXT NOT NULL
);

alter table addresses
    enable row level security;

create
    policy "Everyone can create addresses" on addresses for
    insert with check (true);

create
    policy "Logged in admins can update addresses" on addresses for
    update using (true);

create
    policy "Logged in admins can delete addresses" on addresses for
    delete using (true);

create
    policy "Logged in admins can read addresses" on addresses for
    select using (true);

CREATE TABLE customer
(
    id bigint generated by default as identity primary key,
    email TEXT NOT NULL,
    shipping_address_id bigint REFERENCES addresses(id) NOT NULL,
    billing_address_id bigint REFERENCES addresses(id) NOT NULL
);

alter table customer
    enable row level security;

create
    policy "Everyone can create customers" on customer for
    insert with check (true);

create
    policy "Logged in admins can update customer data" on customer for 
    update using (true);

create
    policy "Logged in admins can delete customer accounts" on customer for
    delete using (true);

create
    policy "Logged in admins can read customer orders" on customer for
    select using (true);


CREATE TABLE orders
(
    id bigint generated by default as identity primary key,
    order_state varchar(30),
    payment_id bigint references payment(id),
    customer_id bigint references customer(id),
    notification_sent BOOLEAN default false
);


alter table orders
    enable row level security;

create
    policy "Everyone can create orders." on orders for
    insert with check (true);

create
    policy "Logged in users can update orders." on orders for
    update using (true);

create
    policy "Logged in users can delete orders." on orders for
    delete
    using (true);

create
    policy "orders are public." on orders for
    select using (true);



CREATE TABLE orderitem
(
    id bigint generated by default as identity primary key,
    order_id bigint references orders(id),
    product_id bigint references products(id),
    quantity INT default 1
);

alter table orderitem
    enable row level security;

create
    policy "Everyone can create orderitems." on orderitem for
    insert with check (true);

create
    policy "Logged in users can update orderitems" on orderitem for
    update using (true);

create
    policy "Logged in users can delete orderitems." on orderitem for
    delete
    using (true);

create
    policy "orderitems are public." on orderitem for
    select using (true);



