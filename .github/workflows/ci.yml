name: "CI"
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint-app:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/cache@v3
        with:
          path: app/.next
          key: ${{ runner.os }}-next
          restore-keys: |
            ${{ runner.os }}-next

      - run: npm ci
        working-directory: app

      - name: Copy .env file
        run: cp .env.example .env.local
        working-directory: app

      - run: npm run build
        working-directory: app

      - run: npm run lint-check
        working-directory: app

  lint-mail-function:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: mail-function

      - run: npm run lint-check
        working-directory: mail-function

  lint-terraform:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - uses: actions/cache@v3
        with:
          path: .terraform
          key: ${{ runner.os }}-node-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: terraform init

      - run: terraform fmt -recursive -check -diff

  validate-terraform:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - uses: actions/cache@v3
        with:
          path: .terraform
          key: ${{ runner.os }}-node-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: terraform init

      - run: terraform validate

  check-types-file:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/cache@v3
        with:
          path: app/.next
          key: ${{ runner.os }}-next
          restore-keys: |
            ${{ runner.os }}-next

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.3.0
        with:
          key: docker-${{ runner.os }}

      - name: Copy .env file
        run: cp .env.example .env.local
        working-directory: app

      - run: npm ci
        working-directory: app

      - name: Supabase start
        run: npm run supabase start
        working-directory: app

      - name: generate types
        run: npm run update-types
        working-directory: app

      - name: generate types
        run: npm run format
        working-directory: app

      - name: diff types
        run: git diff --exit-code src/lib/database.types.ts
        working-directory: app

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/cache@v3
        with:
          path: app/.next
          key: ${{ runner.os }}-next
          restore-keys: |
            ${{ runner.os }}-next

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.3.0
        with:
          key: docker-${{ runner.os }}

      - name: Copy .env file
        run: cp .env.example .env.local
        working-directory: app

      - run: npm ci
        working-directory: app

      - name: Supabase start
        run: npm run supabase start
        working-directory: app

      - run: npm run build
        working-directory: app

      - run: npm run cypress-run-components
        working-directory: app

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            app/cypress/screenshots/*
            app/cypress/videos/*

      - run: |
          cp cypress-coverage/lcov.info /tmp/lcov1.info
        working-directory: app

      - run: npm run next start &
        if: always()
        working-directory: app

      - run: cypress/wait-for-frontend-to-start.sh
        working-directory: app

      - run: npm run cypress-run
        if: always()
        working-directory: app

      - run: |
          cp cypress-coverage/lcov.info /tmp/lcov2.info
        working-directory: app

      - if: always()
        run: |
          rm cypress-coverage/lcov.info
          sudo apt update
          sudo apt install -y --no-install-recommends lcov
          find /tmp -name lcov*.info -exec echo -a {} \; | xargs lcov -o cypress-coverage/lcov.info
        working-directory: app


      - name: SonarCloud Scan
        if: always()
        uses: SonarSource/sonarcloud-github-action@v1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            app/cypress/screenshots/*
            app/cypress/videos/*

  ci-completed:
    needs:
      - lint-app
      - lint-mail-function
      - check-types-file
      - tests
      - lint-terraform
      - validate-terraform
    runs-on: ubuntu-22.04
    steps:
      - run: echo "ci successful"
