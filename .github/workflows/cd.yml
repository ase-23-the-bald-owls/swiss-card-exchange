name: "CD"
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and push docker images
    uses: ./.github/workflows/build-images.yml
    secrets: inherit

  deploy:
    needs:
      - build-and-push
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
      fail-fast: false
    env:
      VERSION: ${{ github.sha }}
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: pip install terraform-local

      - uses: actions/checkout@v3

      - run: cp .env.example .env

      - run: sed -i 's|<your api key>|${{ secrets.LOCALSTACK_API_KEY }}|g' .env

      - run: docker compose --profile local-run pull

      - run: docker compose up -d

      - uses: actions/cache@v3
        with:
          path: .terraform
          key: ${{ runner.os }}-node-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: tflocal init

      - run: ./wait-for-localstack.sh

      - run: |
          cat << 'EOF' | tee -a deploy.tfvars 
          supabase_dc_version = "${{ env.VERSION }}"
          sce_app_version = "${{ env.VERSION }}"
          EOF

      - run: tflocal apply --auto-approve -var-file="deploy.tfvars"

      - run: npm ci
        working-directory: app

      - run: |
          cat << 'EOF' | sudo tee -a /etc/hosts 
          127.0.0.1 supabase.local
          EOF

      - run: ./wait-for-supabase.sh

      - run: ./wait-for-sce-app.sh

      - run: npm run cypress-run
        working-directory: app
        env:
          CYPRESS_BASE_URL: http://localhost:8080

      - run: |
          for container in $(docker ps -a -q | xargs -L 1 echo); do
            echo "showing logs of container $container"
            docker ps -a | grep $container
            docker logs $container
            docker logs $container >> /tmp/containers.log
          done
        if: always()

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            app/cypress/screenshots/*
            app/cypress/videos/*
            /tmp/containers.log